name: CI


on:
  push:
    branches:
      - master
  repository_dispatch:


jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/project-management-api:latest .
    
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/project-management-api:latest

  test:
    runs-on: ubuntu-latest
    environment: Test
    env:
      TEST_DATABASE_URL: ${{ vars.TEST_DATABASE_URL }}
      JWT_SECRET_KEY: ${{ vars.JWT_SECRET_KEY }}
      ADMIN_USER_ID: ${{ vars.ADMIN_USER_ID }}
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: alice
          POSTGRES_PASSWORD: bob
          POSTGRES_DB: project_test_db
        options: >-
          --health-cmd="pg_isready -U alice"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    needs: build-image
    steps:
      - name: Pull Docker image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/project-management-api:latest

      - name: Run tests inside container
        run: |
          docker run --rm \
            -e TEST_DATABASE_URL="$TEST_DATABASE_URL" \
            -e JWT_SECRET_KEY="$JWT_SECRET_KEY" \
            -e ADMIN_USER_ID="$ADMIN_USER_ID" \
            ${{ secrets.DOCKERHUB_USERNAME }}/project-management-api:latest \
            python3 -m unittest discover -s tests
      
      - name: Dummy step to ensure the job runs
        run: echo "Tests completed successfully"
